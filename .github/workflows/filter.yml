name: PR filter v1

# Controls when the workflow will run
on:
  pull_request:
    on: [opened, reopened]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Only apply on testing and official repositories. (this file is inherited by forks, don't run on those)
    if: github.repository == 'penguinencounter/FTC_prfilter' || github.repository == 'FIRST-Tech-Challenge/FtcRobotController'

    steps:
      - uses: actions/checkout@v3
      # Fetch the lastest commits from the remote repository (all branches)
      - run: git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
      - run: |
          ####  TARGET CONFIGURATION  ####
          script_target="https://raw.githubusercontent.com/penguinencounter/FTC_prfilter/main/.github/workflows/detect_and_diff.sh"
          ################################

          echo "Downloading script from $script_target"
          wget -O /tmp/detect_diff.sh $script_target
          echo "Granting permissions"
          chmod +x /tmp/detect_diff.sh
      # Run aforementioned script
      - name: output
        run: |
          if [ "$(bash /tmp/detect_diff.sh)" ]; then
            echo "yes"
            echo "::set-output name=matched::$(echo 1)"
          else
            echo "no"
            echo "::set-output name=matched::$(echo 0)"
          fi
    
    outputs:
      flagged: ${{ steps.output.outputs.matched }}
  
  comment:
    runs-on: ubuntu-latest
    needs: [check]
    if: ${{ needs.check.outputs.flagged == 1 }}
    steps:
      # write a comment (todo close PR)
      - uses: actions/github-script@v6
        with:
            github-token: ${{secrets.GITHUB_TOKEN}}
            script: |
              console.log(context.payload)
              let built = {
                issue_number: context.payload.pull_request.number,
                owner: context.payload.repository.owner.login,
                repo: context.payload.repository.name,
                body: "(PR flagged!)"
              }
              console.log(built)
              github.rest.issues.createComment(built)
        